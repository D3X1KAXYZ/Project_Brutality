Class NewBarrelExploFX : Actor
{
	default
	{
		RenderStyle "Add";
		Alpha 1;
		Scale 1.45;
		+NOGRAVITY;
		+NOINTERACTION;
		+NOBLOCKMAP;
		+NOTELEPORT;
		+ForceXYBillboard;
		+CLIENTSIDEONLY;
	}
	States
	{
		Spawn:
			X005 ABCDEFGHIJKLMNOPQRSTUVWX 1 bright;
			stop;
	}
}

class PB_Barrel : Actor Replaces ExplosiveBarrel
{
	enum PBBarrelStatus
	{
		PBB_Bloody=0,
		PBB_Frozen=0,
		PBB_MeleeDamaged=0, //0 normal, 1 punched once, 2 kicked or punched twice
		PBB_AxeCut=0, //0 normal, 1 cut but spewing, 2 finished spewing
		PBB_BulletHoles=0, //0 normal, 1 shell pellets, 2 large hole, 3 both
	};

	default
	{
		damagefactor "Trample", 0.0;
		damagefactor "Kick", 0.1;
		damagefactor "LowKick", 0.1;
		damagefactor "Melee", 0.1;
		damagefactor "Extremepunches", 0.1;
		damagefactor "Fatality", 10.1;
		damagefactor "SuperPunch", 10.1;
		damagefactor "ExplosiveImpact", 0.4;
		damagefactor "Fire", 3.5;
		damagefactor "Avoid", 0.0;
		damagefactor "Shrapnel", 0.0;
		damagefactor "KillMe", 0.0;
		damagefactor "TeleportRemover", 0.0;
		Health 75;
		Radius 12;
		Height 32;
		Mass 500;
		DamageType "ExplosiveImpact";
		MONSTER;
		-COUNTKILL;
		-NOBLOOD;
		-FRIENDLY;
		+NOICEDEATH;
		+PUSHABLE;
		+SLIDESONWALLS;
		+WINDTHRUST;
		+TELESTOMP;
		+NOBLOCKMONST;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+EXTREMEDEATH;
		-DONTHURTSPECIES;
		+DOHARMSPECIES;
		+usespecial;
		+lookallaround;
		+ACTIVATEMCROSS;
		Activation THINGSPEC_Activate | THINGSPEC_ThingTargets | THINGSPEC_NoDeathSpecial;
		Speed 0;
		MaxTargetRange 1024;
		DamageFactor "BHFT", 10.0;
		Painchance "Blood", 255;
		PainChance "Kick", 255;
		PainChance "SuperKick", 255;
		PainChance "SuperPunch", 255;
		PainChance "ExtremePunches", 255;
		DeathSound "excavator/explode";
		PainSound "barrel/pain";
		Obituary "$OB_BARREL";
		PainChance "DontCallTheBaron", 255;
		Painchance 255;
		bloodcolor "Green";
	}
	
	action void PB_BarrelExplode(int ExploType)
	{
		int ShrapCount;
		int partcount;
		int fireworkscount;
		int smokefirecount;
		int explopartcount;
		int burnpiececount;
		
		//Explode, check ExploType input for explosion type
		switch(ExploType)
		{
			default:
			A_Log("You Shouldnt Have This");
			A_Explode(10000, 10000);
			break;
			
			case 0: //standard 1
			A_Explode(70,200, 1, 1);
			break;

			case 1: //ice 2
			A_Explode(140,400, 1, 1);
			break;
			
			case 2: //leaked, half size 0.5
			A_Explode(50,100, 1, 1);
			break;
			
			case 3: //dumped out, 1/4th size 0.25
			A_Explode(25,50, 1, 1);
			break;
		}
		
		A_Noblocking();
		A_Fall();
		
		shrapcount == 1;
		while(shrapcount <= 20)
		{
			A_CustomMissile ("Shrapnel", 64, 0, random (0, 360), 2, random (30, 60)); //replace with hurtful shrapnel actor things
			shrapcount++;
		}
		
		partcount == 1;
		while(partcount <= 50)
		{
			A_CustomMissile ("ShrapnelParticle", 0, 0, random (0, 360), 2, random (0, 360));
			partcount++;
		}
		
		fireworkscount == 1;
		while(fireworkscount <= 10)
		{
			A_CustomMissile("FireworkSFXType1", random(32,64), 0, frandom(0, 360), CMF_AIMDIRECTION, frandom(30, 60));
			A_CustomMissile("FireworkSFXType2", random(32,64), 0, frandom(0, 360), CMF_AIMDIRECTION, frandom(30, 60));
			fireworkscount++;
		}
		
		smokefirecount == 1;
		while(smokefirecount <= 4)
		{
			A_CustomMissile ("HighExplosiveFlames", random (10, 20), 0, random (0, 360), 2, random (10, 90));
			A_CustomMissile ("BigBlackSmokeLarger", 20, 0, random (0, 360), 2, random (10, 90));
			smokefirecount++;
		}
		
		explopartcount == 1;
		while(explopartcount <= 4)
		{
			A_CustomMissile ("PBExplosionparticles3", 64, 0, random (0, 360), 2, random (40, 90));
			A_CustomMissile ("PBExplosionparticles4", 64, 0, random (0, 360), 2, random (40, 90));
			explopartcount++;
		}
		
		burnpiececount == 1;
		while(burnpiececount <= 4)
		{
			A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15));
			A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35));
			A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35));
			burnpiececount++;
		}
		
		A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		
		Radius_Quake (2, 24, 0, 15, 0);
		
		A_SpawnItem("WhiteShockwaveBig");
		A_SpawnItemEx ("NewBarrelExploFX", 0, 0, 20);
	}
	
	States
	{
		Spawn:
			TNT1 A 0 A_GiveInventory("TargetIsANExplosiveBarrel", 1);
		spawnloop:
			EXB1 ABCDEF 2;
			goto SpawnLoop;
		Pain:
			EXB1 A 1;
			TNT1 A 0 A_ClearTarget;
			Goto Spawn;
			
		Death:
			//AGHI
			EXB1 A 1;
			EXB1 GH 1 BRIGHT;
			TNT1 A 0 A_Stop;
			TNT1 A 0 A_PlaySound("excavator/explode",0);
			TNT1 A 0 PB_BarrelExplode(0);
			BSHP I 1;
			BSHP AAAAAAAA 8 A_CustomMissile("ExplosionSmoke", 1, 0, random (0, 360), 2, random (50, 130));
			BSHP A 300 BRIGHT A_BarrelDestroy;
			BSHP A 5 A_Respawn;
			Stop;
			
		Pain.Melee:
		Pain.Kick:
		Pain.SuperKick:
		Pain.ExtremePunches:
		Pain.SuperPunch:
			BAR1 A 1 A_Pain();
			TNT1 A 0 ThrustThingZ(0,10,0,1);
			TNT1 A 0 HealThing(100);
			Goto SpawnLoop;
		
		Death.Trample:
		Death.LowKick:
		Death.Melee:
		Death.SuperPunch:
		Death.Kick:
		Death.ExtremePunches:
			TNT1 A 0 A_NoBlocking;
			TNT1 A 0 A_ChangeFlag("THRUACTORS", 1);
			TNT1 A 1;
			TNT1 A 0 A_SpawnItemEx("PB_Barrel",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			TNT1 A 1;
			stop;
		}
}

class BarrelShrapnel1 : Actor
{
	default
	{
		Radius 2;
		Height 2;
		Speed 8;
		Mass 1;
		+NOBLOCKMAP
		+MISSILE
		+NOTELEPORT
		+MOVEWITHSECTOR
		//+CLIENTSIDEONLY
		+THRUACTORS
		+FLOORCLIP
		+DOOMBOUNCE
		+NOGRAVITY
		BounceFactor 0.5;
		Gravity 0.9;
		Mass 1;
    }
	States
    {
		Spawn:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Underwater");
			BRPT ABCDEFGH 1;
			TNT1 A 0 A_ChangeFlag("NOGRAVITY", 0);
			Goto Spawn2;
		Spawn2:
			TNT1 A 0 A_JumpIf(waterlevel > 1, "Underwater");
			BRPT ABCDEFGH 2;
			Loop;
		Death:
			TNT1 A 0;
			BRPT I 300;
			BRPT IIIIIIIII 2 A_FadeOut(0.1);
			Stop;
		Underwater:
		Splash:
			Goto Death;
    }
}


class BarrelShrapnel2: BarrelShrapnel1
{
	default
	{
		Scale 0.7;
	}
}

class BarrelShrapnel3: BarrelShrapnel1
{
	default
	{
		Scale 0.4;
	}
}

class BarrelShrapnel4: BarrelShrapnel1
{
	default
	{
		Scale 0.2;
	}
}

class BarrelKaboom: DeadMarine
{
	States
	{
		Spawn:
		TNT1 A 1;
		TNT1 AAAA 0 A_CustomMissile ("SmallExplosionSpawner", 20, 0, random (0, 360), 2, random (0, 180));
		Stop;
	}
}

class FireworkSFXType1 : Actor
{
	default
	{
		Radius 4;
		Height 4;
		Speed 18;
		PROJECTILE;
		+THRUGHOST;
		RenderStyle "Add";
		+MISSILE;
		-NOGRAVITY;
		Gravity 1;
		Alpha 1.0;
	}
	States
	{
		Spawn:
			//TNT1 A 0 A_CustomMissile ("SmallFlameTrails", 2, 0, random (170, 200), 2, random (-20, 20))
			TNT1 A 0 A_SpawnItem ("SmallFlameTrails");
			TNT1 A 1 A_SpawnItem("RedFlareSmall");
			TNT1 A 0 A_CustomMissile ("ExplosionParticleHeavy", 2, 0, random (0, 360), 2, random (0, 290));
			TNT1 A 1 A_SpawnItem("RedFlareSmall");
			Loop;
	
		Death:
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15));
			Stop;
	}
}

class FireworkSFXType2: FireworkSFXType1
{
	default
	{
		Radius 2;
		Height 2;
		+DOOMBOUNCE;
		WallBounceFactor 0.5;
		BounceFactor 0.2;
	}
	States
	{
		Death:
			TNT1 A 0;
			Stop;
	}
}